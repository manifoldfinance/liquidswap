/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SwapRouterMock,
  SwapRouterMockInterface,
} from "../SwapRouterMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract UniswapV2[]",
        name: "swaps",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slippage",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061098f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806321d318b514610030575b600080fd5b61004361003e36600461060d565b610059565b604051610050919061077d565b60405180910390f35b600061006785858585610070565b95945050505050565b60008060006100808787876102dd565b91509150856000815181106100a557634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031663095ea7b383876040518363ffffffff1660e01b81526004016100da929190610762565b602060405180830381600087803b1580156100f457600080fd5b505af1158015610108573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012c91906106d2565b5060006001600160a01b0383166338ed1739876103e861014c8982610897565b6101569087610878565b6101609190610864565b8a3061016d4260b461084c565b6040518663ffffffff1660e01b815260040161018d9594939291906107b9565b600060405180830381600087803b1580156101a757600080fd5b505af11580156101bb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101e3919081019061069d565b9050600081600183516101f69190610897565b8151811061021457634e487b7160e01b600052603260045260246000fd5b60200260200101519050876001895161022d9190610897565b8151811061024b57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03168860008151811061027d57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316856001600160a01b03167f6782190c91d4a7e8ad2a867deed6ec0a970cab8ff137ae2bd4abd92b3810f4d38a856040516102c99291906107ab565b60405180910390a498975050505050505050565b60008060008060008751905060005b818110156103735760006103288a838151811061031957634e487b7160e01b600052603260045260246000fd5b60200260200101518a8a610381565b9050838111156103605789828151811061035257634e487b7160e01b600052603260045260246000fd5b602002602001015194508093505b508061036b816108f7565b9150506102ec565b509197909650945050505050565b60405163d06ca61f60e01b81526000906001600160a01b0385169063d06ca61f906103b2908590879060040161078b565b60006040518083038186803b1580156103ca57600080fd5b505afa9250505080156103ff57506040513d6000823e601f3d908101601f191682016040526103fc919081019061069d565b60015b61040b57506000610444565b806001825161041a9190610897565b8151811061043857634e487b7160e01b600052603260045260246000fd5b60200260200101519150505b9392505050565b600061045e61045984610828565b61080c565b9050808382526020820190508285602086028201111561047d57600080fd5b60005b858110156104a957816104938882610565565b8452506020928301929190910190600101610480565b5050509392505050565b60006104c161045984610828565b905080838252602082019050828560208602820111156104e057600080fd5b60005b858110156104a957816104f688826105ec565b84525060209283019291909101906001016104e3565b600061051a61045984610828565b9050808382526020820190508285602086028201111561053957600080fd5b60005b858110156104a9578161054f8882610602565b845250602092830192919091019060010161053c565b803561057081610954565b92915050565b600082601f83011261058757600080fd5b813561059784826020860161044b565b949350505050565b600082601f8301126105b057600080fd5b81356105978482602086016104b3565b600082601f8301126105d157600080fd5b815161059784826020860161050c565b80516105708161096b565b803561057081610973565b80356105708161097c565b80516105708161097c565b6000806000806080858703121561062357600080fd5b843567ffffffffffffffff81111561063a57600080fd5b6106468782880161059f565b945050602085013567ffffffffffffffff81111561066357600080fd5b61066f87828801610576565b9350506040610680878288016105f7565b9250506060610691878288016105f7565b91505092959194509250565b6000602082840312156106af57600080fd5b815167ffffffffffffffff8111156106c657600080fd5b610597848285016105c0565b6000602082840312156106e457600080fd5b600061059784846105e1565b60006106fc8383610704565b505060200190565b61070d816108ae565b82525050565b600061071d825190565b80845260209384019383018060005b8381101561075157815161074088826106f0565b97506020830192505060010161072c565b509495945050505050565b8061070d565b604081016107708285610704565b610444602083018461075c565b60208101610570828461075c565b60408101610799828561075c565b81810360208301526105978184610713565b60408101610770828561075c565b60a081016107c7828861075c565b6107d4602083018761075c565b81810360408301526107e68186610713565b90506107f56060830185610704565b610802608083018461075c565b9695505050505050565b600061081760405190565b905061082382826108ca565b919050565b600067ffffffffffffffff8211156108425761084261093e565b5060209081020190565b6000821982111561085f5761085f610912565b500190565b60008261087357610873610928565b500490565b600081600019048311821515161561089257610892610912565b500290565b6000828210156108a9576108a9610912565b500390565b60006001600160a01b038216610570565b6000610570826108ae565b601f19601f830116810181811067ffffffffffffffff821117156108f0576108f061093e565b6040525050565b600060001982141561090b5761090b610912565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b61095d816108ae565b811461096857600080fd5b50565b80151561095d565b61095d816108bf565b8061095d56fea164736f6c6343000804000a";

export class SwapRouterMock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwapRouterMock> {
    return super.deploy(overrides || {}) as Promise<SwapRouterMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwapRouterMock {
    return super.attach(address) as SwapRouterMock;
  }
  connect(signer: Signer): SwapRouterMock__factory {
    return super.connect(signer) as SwapRouterMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapRouterMockInterface {
    return new utils.Interface(_abi) as SwapRouterMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapRouterMock {
    return new Contract(address, _abi, signerOrProvider) as SwapRouterMock;
  }
}
